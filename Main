#!/usr/bin/env Python3
import PySimpleGUI as sg
from PySimpleGUI import easy_print
from PySimpleGUI import popup_no_frame
from PySimpleGUI import popup_animated

from PySimpleGUI import popup_scrolled

import tkinter as tk
from tkinter import scrolledtext
import textwrap


sg.ChangeLookAndFeel('TealMono')






# ------ Menu Definition ------ #
menu_def = [['File', ['Open', 'Save', 'Exit', 'Properties']],
            ['Edit', ['Paste', ['Special', 'Normal', ], 'Undo'], ],
            ['Help', 'About...'], ]


#==============================================================================================================================
#----------MAIN PAGE MENU----------MAIN PAGE MENU----------MAIN PAGE MENU----------MAIN PAGE MENU----------MAIN PAGE MENU
#==============================================================================================================================

#Columns--------------------------------------------------------------------------------------------------------------------------

column1 = [
        [sg.Button('Immunology', size=(40, 1), font=("Helvetica", 25))],
        [sg.Button('Genomics', size=(40, 1), font=("Helvetica", 25))],
        [sg.Button('Cancer Immunology', size=(40, 1), font=("Helvetica", 25))],
        [sg.Button('Stem Cell Neurobiology', size=(40, 1), font=("Helvetica", 25))],
        [sg.Button('Type II Diabetes Renal Failure', size=(40, 1), font=("Helvetica", 25))],
        [sg.Button('Robotics with Python', size=(40, 1), font=("Helvetica", 25))],
        [sg.Button('Exit')]]

column2 = [
    [sg.Button('About', size =(10,1),font=("Helvetica", 25))],
    [sg.Button(image_filename = (r'C:\Users\User\PycharmProjects\GUI\JCSMR.png'),image_size=(200,100),image_subsample=2,border_width=0)],
    [sg.Button(image_filename = (r'C:\Users\User\PycharmProjects\GUI\Scripps.png'),image_size=(200,100),image_subsample=2,border_width=0)],
    [sg.Button(image_filename = (r'C:\Users\User\PycharmProjects\GUI\Kolling.png'),image_size=(200,100),image_subsample=2,border_width=0)],
    [sg.Button(image_filename = (r'C:\Users\User\PycharmProjects\GUI\EngeneIC.png'),image_size=(200,100),image_subsample=2,border_width=0)],
    [sg.Button('Publications', size =(10,1),font=("Helvetica", 25))]

]

column1_Bcell = [[sg.Text("something",background_color = 'white')]]
column2_Bcell = [[sg.Image(r'C:\Users\User\PycharmProjects\GUI\T-cells\Th.png',background_color='white')]]
column1_Tcell = [[sg.Text("something",background_color='white')]]
column2_Tcell = [[sg.Image(r'C:\Users\User\PycharmProjects\GUI\T-cells\Th.png',background_color='white')]]
column1_Tccell = [[sg.Text("something",background_color='white')]]
column1_naive = [[sg.Text('Precursor T-cells for effector and memory T-cell subsets derived from the thymus',font=('Helvetica', 12),background_color= 'white')],
                    [sg.Text('The following list characterises naive T-cells: ',background_color='white',font=('Helvetica', 12))],
                    [sg.Text('Expresses:',text_color=('red'),background_color='white')],
                    [sg.Button('CD45RA'),sg.Button('CCR7'),sg.Button('CD62L'),sg.Button('CD127'),sg.Button('CD132'),sg.Text('but does not express CD25, CD44, CD69, CD45RO, HLA-DR')],
                    [sg.Text('Secretes',text_color=('red'),background_color='white')],
                    [sg.Button('IFN-Gamma'),sg.Button('TNF-Alpha'),sg.Button('lymphotoxin-alpha'),sg.Button('IFN-Gamma'),sg.Button('IL-2')],
                    [sg.Text('Markers',text_color= 'red',background_color='white')],
                    [sg.Button('CCR7'),sg.Button('CD45R'),sg.Button('CD62L'),sg.Button('CD127'),sg.Button('CD132')],
                    [sg.Text('Differentiation factors (Th0)',text_color=('red'),background_color='white')],
                    [sg.Text('Migrates to secondary lymph nodes')],
                    [sg.Image(r'C:\Users\User\PycharmProjects\GUI\T-cells\Th1_Th2.png',background_color='white')]
                   ]
column1_Th1cell = [[sg.Text('Th1 cells promote pro-inflammatory reponses and defend against intracellular bacteria,fungi and viruses.',font=('Helvetica', 12),background_color= 'white')],
                    [sg.Text('The following list characterises Th1 cells: ',background_color='white',font=('Helvetica', 12))],
                    [sg.Text('Expresses:',text_color=('red'),background_color='white')],
                    [sg.Button('T-bet'),sg.Button('CXCR1'),sg.Button('CCR5'),sg.Button('Tim3')],
                    [sg.Text('Secretes',text_color=('red'),background_color='white')],
                    [sg.Button('IFN-Gamma'),sg.Button('TNF-Alpha'),sg.Button('lymphotoxin-alpha'),sg.Button('IFN-Gamma'),sg.Button('IL-2')],
                    [sg.Text('Markers',text_color= 'red',background_color='white')],
                    [sg.Button('CD4'),sg.Button('IL-12R'),sg.Button('IL-18R')],
                    [sg.Text('Differentiation factors (Th0 --> Th1)',text_color=('red'),background_color='white')],
                    [sg.Button('IFN-gamma'),sg.Button('IL-12')],
                    [sg.Image(r'C:\Users\User\PycharmProjects\GUI\T-cells\Th1_Th2.png',background_color='white')]
                   ]
column1_Th2cell = [[sg.Text('Th2 cells defend against extracellular bacteria and parasites and activate B-cell antibody production.',font=('Helvetica', 12),background_color= 'white')],
                    [sg.Text('The following list characterises Th2 cells: ',background_color='white',font=('Helvetica', 12))],
                    [sg.Text('Expresses:',text_color=('red'),background_color='white')],
                    [sg.Button('IL-1R'),sg.Button('IFN-gamma Receptor'),sg.Button('CCR4'),sg.Button('CCR8'),sg.Button('CCR8'),sg.Button('Tim1'),sg.Button('ICOS'),sg.Button('Stat6'),sg.Button('GATA-3'),sg.Button('c-maf')],
                    [sg.Text('Secretes',text_color=('red'),background_color='white')],
                    [sg.Button('IL-4'),sg.Button('IL-5'),sg.Button('IL-10'),sg.Button('IL-13'),sg.Button('IL-2')],
                    [sg.Text('Markers',text_color= 'red',background_color='white')],
                    [sg.Button('CD4'),sg.Button('stat6'),sg.Button('GATA-3'),sg.Button('c-maf')],
                    [sg.Text('Differentiation factors (Th0 --> Th2)',text_color=('red'),background_color='white')],
                    [sg.Button('IL-4')],
                    [sg.Image(r'C:\Users\User\PycharmProjects\GUI\T-cells\Th1_Th2.png',background_color='white')]
                   ]

column1_Th3cell = [[sg.Text('Th3 cells are a regulatory T-cell subset important in intestinal immune regulation',font=('Helvetica', 12),background_color= 'white')],
                    [sg.Text('The following list characterises Th3 cells: ',background_color='white',font=('Helvetica', 12))],
                    [sg.Text('Expresses:',text_color=('red'),background_color='white')],
                    [sg.Button('GITR'),sg.Button('c-maf'),sg.Text('no or low expression FOXP3,CD25')],
                    [sg.Text('Secretes',text_color=('red'),background_color='white')],
                    [sg.Button('TGF-Beta')],
                    [sg.Text('Markers',text_color= 'red',background_color='white')],
                    [sg.Button('CD4')],
                    [sg.Text('Differentiation factors (Th0 --> Th3)',text_color=('red'),background_color='white')],
                    [sg.Button('IL-10')],
                    [sg.Image(r'C:\Users\User\PycharmProjects\GUI\T-cells\Th3.png',background_color='white')]
                   ]

column1_Th9cell = [[sg.Text('T-helper 9 cells are thought to target helminth parasites')],
                    [sg.Text('The following list characterises Th9 cells: ',background_color='white',font=('Helvetica', 12))],
                    [sg.Text('Expresses:',text_color=('red'),background_color='white')],
                    [sg.Button('IRF4'),sg.Button('PU.1'),sg.Text('no expression of CCR4')],
                    [sg.Text('Secretes',text_color=('red'),background_color='white')],
                    [sg.Button('IL-9')],
                    [sg.Text('Markers',text_color= 'red',background_color='white')],
                    [sg.Button('CD4'),sg.Button('CCR5'),sg.Button('CD4'),sg.Button('CD4')],
                    [sg.Text('Differentiation factors (Th0 --> Th9)',text_color=('red'),background_color='white')],
                    [sg.Button('IL-9,IL-4,TGF-Beta')],
                    [sg.Image(r'C:\Users\User\PycharmProjects\GUI\T-cells\Th3.png',background_color='white')]
                   ]

column1_Tfcell = [[sg.Text('Follicular B-helper T-cells are important in supporting Germinal Centre B-cells and aiding their differentiation into B-memory and plasma cells',font=('Helvetica', 12),background_color= 'white')],
                    [sg.Text('The following list characterises Tf cells: ',background_color='white',font=('Helvetica', 12))],
                    [sg.Text('Expresses:',text_color=('red'),background_color='white')],
                    [sg.Button('CXCR5'),sg.Button('PD-1'),sg.Button('BTLA'),sg.Button('ICOS'),sg.Button('CD40L')],
                    [sg.Text('Secretes',text_color=('red'),background_color='white')],
                    [sg.Button('IL-21'),sg.Button('IL-4'),sg.Button('Bcl6')],
                    [sg.Text('Markers',text_color= 'red',background_color='white')],
                    [sg.Button('CD4')],
                    [sg.Text('Differentiation factors (Th0 --> Tf)',text_color=('red'),background_color='white')],
                    [sg.Button('IL-10')],
                    [sg.Image(r'C:\Users\User\PycharmProjects\GUI\T-cells\Tf.png',background_color='white')]
                   ]
column1_Trcell = [[sg.Text('Regulatory helper T-cells suppress tumour immunity, maintain immune self tolerance and help prevent autoimmunity',font=('Helvetica', 12),background_color= 'white')],
                    [sg.Text('The following list characterises Treg cells: ',background_color='white',font=('Helvetica', 12))],
                    [sg.Text('Expresses:',text_color=('red'),background_color='white')],
                    [sg.Button('CTLA-4'),sg.Button('FOXP3'),sg.Button('GITR'),sg.Button('LAG3')],
                    [sg.Text('Secretes',text_color=('red'),background_color='white')],
                    [sg.Button('IL-10'),sg.Button('TGF-Beta'),sg.Button('adenosine')],
                    [sg.Text('Markers',text_color= 'red',background_color='white')],
                    [sg.Button('CD4'),sg.Button('CD25'),sg.Button('CD152(CTLA-4)')],
                    [sg.Text('Differentiation factors (Th0 --> Treg)',text_color=('red'),background_color='white')],
                    [sg.Button('?')],
                    [sg.Image(r'C:\Users\User\PycharmProjects\GUI\T-cells\Tf.png',background_color='white')]
                   ]

column1_Tr1cell = [[sg.Text('Type I regulatory cells regulate tolerance towards antigens of any origin. They maintain and induce peripheral tolerance and suppress tissue inflammation in autoimmunity',font=('Helvetica', 12),background_color= 'white')],
                    [sg.Text('The following list characterises Tr1 cells: ',background_color='white',font=('Helvetica', 12))],
                    [sg.Text('Expresses:',text_color=('red'),background_color='white')],
                    [sg.Button('CD49'),sg.Button('LAG3'),sg.Button('CD226')],
                    [sg.Text('Secretes',text_color=('red'),background_color='white')],
                    [sg.Button('IL-10'),sg.Button('IFN-gamma'),sg.Button('IL-5'),sg.Button('TGF-Beta'),sg.Text('Does not secrete IL-2 or IL-4')],
                    [sg.Text('Markers',text_color= 'red',background_color='white')],
                    [sg.Button('CD4'),sg.Button('CD49'),sg.Text('no GTR expressed and very low CTLA4 or CD25 expressed')],
                    [sg.Text('Differentiation factors (Th0 --> Tr1)',text_color=('red'),background_color='white')],
                    [sg.Button('?')],
                    [sg.Image(r'C:\Users\User\PycharmProjects\GUI\T-cells\Tf.png',background_color='white')]
                   ]

column1_Th17cell = [[sg.Text('Th17 cells are related to T-reg cells. They maintain mucosal barriers, contribute to pathogen clearence and implicated in autoimmune and inflammatory disorders',font=('Helvetica', 12),background_color= 'white')],
                    [sg.Text('The following list characterises Th17 cells: ',background_color='white',font=('Helvetica', 12))],
                    [sg.Text('Expresses:',text_color=('red'),background_color='white')],
                    [sg.Button('ROR-Gamma')],
                    [sg.Text('Secretes',text_color=('red'),background_color='white')],
                    [sg.Button('IL-17'),sg.Button('IL-21'),sg.Button('IL-26'),sg.Button('GM-CSF')],
                    [sg.Text('Markers',text_color= 'red',background_color='white')],
                    [sg.Button('CD4'),sg.Button('ROR-gamma'),sg.Button('CCR4'),sg.Button('CCR6'),sg.Button('CD161'),sg.Text('not CXCR3')],
                    [sg.Text('Differentiation factors (naive T-cells --> Th17)',text_color=('red'),background_color='white')],
                    [sg.Button('?')],
                    [sg.Image(r'C:\Users\User\PycharmProjects\GUI\T-cells\Th17.png',background_color='white')]
                   ]

column1_Th22cell = [[sg.Text('T-helper 22 cells are mainly found in the skin and play a role in wound healing and protecting epithelial barrier organs. Also linked to inflammatory diseases',font=('Helvetica', 12),background_color= 'white')],
                    [sg.Text('The following list characterises Th22 cells: ',background_color='white',font=('Helvetica', 12))],
                    [sg.Text('Expresses:',text_color=('red'),background_color='white')],
                    [sg.Button('CCR4'),sg.Button('CCR6'),sg.Button('AhR')],
                    [sg.Text('Secretes',text_color=('red'),background_color='white')],
                    [sg.Button('IL-22'),sg.Text('does not secrete IFN-gamma, IL-4 or IL-17')],
                    [sg.Text('Markers',text_color= 'red',background_color='white')],
                    [sg.Button('CD4'),sg.Button('ROR-gamma'),sg.Button('AhR'),sg.Button('CCR4'),sg.Button('CCR6'),sg.Button('CCR10'),sg.Button('PDGFR')],
                    [sg.Text('Differentiation factors (Th0 --> Treg)',text_color=('red'),background_color='white')],
                    [sg.Button('?')],
                    [sg.Image(r'C:\Users\User\PycharmProjects\GUI\T-cells\Tf.png',background_color='white')]
                   ]

# Cytokines,Chemokines and receptors

CD4 = "CD4 (cluster of differentiation 4, is a glycoprotein found on the surface of immune cells such as T-helper cells, monocytes, macrophages and dendritic cells. The CD4 is a coreceptor of the T cell receptor (TCR) and assists the latter in communicating with antigen-presenting cells. The TCR complex and CD4 each bind to distinct regions of the antigenpresenting MHC II molecule."






column1_NKcell = [[sg.Text("something",background_color='white')]]
column2_NKcell = [[sg.Image(r'C:\Users\User\PycharmProjects\GUI\T-cells\Th.png',background_color='white')]]


layout_Main = [
        [sg.Menu(menu_def, tearoff=True)],
        [sg.Column(column1,size=(1200,600),scrollable=True),sg.Column(column2,size=(500,500))]
        ]

p1 = "T-helper cells include Th1, Th2, Th3, Treg, Th17, Th22a and fTh. Each cell type has a variety of identifying markers. These include CD4, CD8, CD3, CD "
p2 = "T-helper cells"


title_window = sg.Window('Choose Science', default_element_size=(30, 1),size=(1750,750), grab_anywhere=True).Layout(layout_Main)


immunology_window_active = False
genomics_window_active = False
cancerImmunology_window_active = False
neurobiology_window_active = False
exit_active = False

while True:
    event1,value1 = title_window.Read()

    if event1 is None and event1 == 'Exit':
        break

    if not exit_active and event1 == 'Exit':
        break
    #========================================================================================================================
    #----------IMMUNOLOGY----------IMMUNOLOGY----------IMMUNOLOGY----------IMMUNOLOGY----------IMMUNOLOGY----------IMMUNOLOGY#
    #=========================================================================================================================

    if not immunology_window_active and event1 == 'Immunology':
        title_window.Hide()

        immunology_window_active = True

        tab3_layout = [[sg.T()]]
        tab4_layout = [[sg.T()]]
        tab5_layout = [[sg.T()]]
        tab6_layout = [[sg.T()]]
        tab7_layout = [[sg.T()]]
        tab8_layout = [[sg.T()]]


        #NKT cells

        NK_Layout = [[sg.T()]]
        NK1_layout = [[sg.T()]]
        NK2_Layout = [[sg.T()]]
        NKT1_Layout = [[sg.T()]]
        NKT2_Layout = [[sg.T()]]

        #T-cell sub Tab menu
        th_overview = [[(sg.Column(column1_Tcell,size=(800,600),background_color='white',scrollable=True)),
                        sg.Column(column2_Tcell,size=(800,600),background_color='white',scrollable=True)
        ]]
        naive_layout = [[sg.Column(column1_naive,size=(1400,600),background_color='white',scrollable=True)]]
        th1_layout = [[sg.Column(column1_Th1cell,size=(1400,600),background_color='white',scrollable=True)]]
        th2_layout = [[sg.Column(column1_Th2cell,size=(1400,600),background_color='white',scrollable=True)]]
        th3_layout = [[sg.Column(column1_Th3cell,size=(1400,600),background_color='white',scrollable=True)]]
        th9_layout = [[sg.Column(column1_Th9cell, size=(1400, 600), background_color='white', scrollable=True)]]
        tf_layout = [[sg.Column(column1_Tfcell,size=(1400,600),background_color='white',scrollable=True)]]
        treg_layout = [[sg.Column(column1_Trcell,size=(1400,600),background_color='white',scrollable=True)]]
        tr1_layout = [[sg.Column(column1_Tr1cell, size=(1400, 600), background_color='white', scrollable=True)]]
        th17_layout = [[sg.Column(column1_Th17cell,size=(1400,600),background_color='white',scrollable=True)]]
        th22_layout = [[sg.Column(column1_Th22cell,size=(1400,600),background_color='white',scrollable=True)]]

        #B-cell sub tab menu

        b_overview = [

            [(sg.Column(column1_Bcell, size=(800, 600), background_color='white',scrollable=True)),
             (sg.Column(column2_Bcell, size=(800, 600), background_color='white', scrollable=True))
            ]]
        nb_layout = [[sg.T()]]
        ib_layout = [[sg.T()]]
        pb_layout = [[sg.T()]]
        ab_layout = [[sg.T()]]
        mb_layout = [[sg.T()]]
        b1_layout = [[sg.T()]]
        mzb_layout = [[sg.T()]]
        rb_layout = [[sg.T()]]
        fb_layout = [[sg.T()]]

        tc_overview = [

            [(sg.Column(column1_Bcell, size=(800, 600), background_color='white', scrollable=True)),
             (sg.Column(column2_Bcell, size=(800, 600), background_color='white', scrollable=True))
             ]]
        c_layout = [[sg.T()]]


        # B-cell layout
        layout_B = [
            [sg.TabGroup([[sg.Tab('B-Cell Overview', b_overview),
                           sg.Tab('naive B-cells', nb_layout),
                           sg.Tab('immature B-cells', ib_layout),
                           sg.Tab('plasma B-cells', pb_layout),
                           sg.Tab('activated B-cells', ab_layout),
                           sg.Tab('memory B-cells', mb_layout),
                           sg.Tab('B1 cells', b1_layout),
                           sg.Tab('marginal zone B-cells', mzb_layout),
                           sg.Tab('regulatory B-cells', rb_layout),
                           sg.Tab('follicular B-cells', fb_layout)]],
                         tooltip='TIP2')],
            ]

        # Helper T-cell layout
        layout_th = [
                    [sg.TabGroup([[ sg.Tab('Th-Cell Overview', th_overview),
                    sg.Tab('Naive T-cells', naive_layout),
                    sg.Tab('T-Helper 1', th1_layout),
                    sg.Tab('T-helper 2', th2_layout),
                    sg.Tab('T-helper 3', th3_layout),
                    sg.Tab('T-helper 9', th9_layout),
                    sg.Tab('Th-follicular', tf_layout),
                    sg.Tab('Th-regulatory', treg_layout),
                    sg.Tab('Type I -regulatory', tr1_layout),
                    sg.Tab('T-helper 17', th17_layout),
                    sg.Tab('T-helper 22', th22_layout)]],
                    tooltip='TIP2')],
                    ]

        layout_tc = [
            [sg.TabGroup([[sg.Tab('Cytotoxic T-cells Overview', c_layout),
                           sg.Tab('Cytotoxic T-cells alpha/Beta', c_layout),
                           sg.Tab('Cytotoxic T cells gamma/sigma', c_layout),
                           sg.Tab('Cytotoxic CD1 T-cells', c_layout),
                           ]],
                         tooltip='TIP2')],
            ]

        layout_nk = [
            [sg.TabGroup([[sg.Tab('NK and NKT overview',NK_Layout),
                            sg.Tab('NK 1.1', NK1_layout),
                           sg.Tab('NK 1.2', NK2_Layout),
                           sg.Tab('Type I NKT', NKT1_Layout),
                           sg.Tab('Type II NKT', NKT2_Layout),
                           ]],
                         tooltip='TIP2')],
            ]

        # Immunology layout
        layout_Immunology = [[sg.Text('File Name')],[sg.Input(),sg.FileBrowse(), sg.OK(),sg.Cancel()],

            [sg.TabGroup([[sg.Tab('Th-cell',layout_th),
            sg.Tab('Tc-cell',layout_tc),
            sg.Tab('B-cell', layout_B),
            sg.Tab('NK Cell',layout_nk),
            sg.Tab('Macrophages',tab4_layout),
            sg.Tab('Neutrophils',tab5_layout),
            sg.Tab('cytokines',tab6_layout),
            sg.Tab('Chemokines',tab7_layout)]],
            tooltip='TIP2')],
                                ]





        immunology_window = sg.Window('Immunology',size=(1500,800), grab_anywhere=False).Layout(layout_Immunology)

        while True:
            event2,value2 = immunology_window.Read()
            if event2 is None or event2 == 'Exit':
                immunology_window_active = False
                immunology_window.Close()
                title_window.UnHide()
                break
            if event2 == "CD4":
                popup_scrolled(CD4)





    #=============================================================================================================================
    #----------GENOMICS----------GENOMICS----------GENOMICS----------GENOMICS----------GENOMICS----------GENOMICS----------GENOMICS
    #==============================================================================================================================

    if not genomics_window_active and event1 == 'Genomics':
        title_window.Hide()
        genomics_window_active = True


        column1_mRNA = [
            [sg.Image(r'C:\Users\User\PycharmProjects\GUI\T-cells\mRNA.png',background_color='white')]

        ]

        column1_tRNA = [
            [sg.Image(r'C:\Users\User\PycharmProjects\GUI\T-cells\trna.png', background_color='white')]

        ]

        layout_Default =[[sg.T()]]
        layout_mRNA = [[sg.Column(column1_mRNA,size=(1400,600),background_color='white',scrollable=True)]]
        layout_tRNA = [[sg.Column(column1_tRNA, size=(1400, 600), background_color='white', scrollable=True)]]

        # RNA subtypes
        layout_RNATypes = [
            [sg.TabGroup([[sg.Tab('mRNA',layout_mRNA),
                           sg.Tab('tRNA',layout_tRNA),
                           sg.Tab('rRNA',layout_Default),
                           sg.Tab('miRNA',layout_Default),
                           sg.Tab('circRNA',layout_Default),
                           sg.Tab('siRNA',layout_Default),
                           sg.Tab('piRNA',layout_Default),
                           sg.Tab('lnRNA',layout_Default)]],
                         tooltip='TIP2')],
            [sg.Button('Read')], [sg.Button('Exit')]]

        #subgroups
        layout_epitrans = [
            [sg.TabGroup([[sg.Tab('Overview', layout_Default),
                           sg.Tab('Methylation', layout_Default),
                           sg.Tab('Methyltransferases', layout_Default),
                           sg.Tab('RNA Methylation', layout_Default),
                           sg.Tab('NSUN2', layout_Default)
                           ]],
                         tooltip='TIP2')],
            [sg.Button('Read')], [sg.Button('Exit')]]

        layout_polyad = [
            [sg.TabGroup([[sg.Tab('Overview', layout_mRNA),
                           sg.Tab('Polyadenylation', layout_tRNA),
                           sg.Tab('Alternative Polyadenylation', layout_Default),
                           sg.Tab('circRNA', layout_Default),
                           sg.Tab('siRNA', layout_Default),
                           sg.Tab('piRNA', layout_Default),
                           sg.Tab('lnRNA', layout_Default)]],
                         tooltip='TIP2')],
            [sg.Button('Read')], [sg.Button('Exit')]]

        layout_Genomics = [[sg.Text('File Name')], [sg.Input(), sg.FileBrowse(), sg.OK(), sg.Cancel()],

                             [sg.TabGroup([[sg.Tab('Overview',layout_Default),
                                            sg.Tab('RNA Types',layout_RNATypes),
                                            sg.Tab('RNA Sequencing', layout_Default),
                                            sg.Tab('PAT Sequencing', layout_Default),
                                            sg.Tab('Polyadenylation and APA',layout_Default),
                                            sg.Tab('Epitranscriptomics',layout_Default),
                                            sg.Tab('Bi-Sulfite treatment', layout_Default),
                                            sg.Tab('Polysome Profiling', layout_Default),
                                            sg.Tab('RNA/Protein interactome',layout_Default),
                                            ]],
                                          tooltip='TIP2')],
                             [sg.Button('Read')], [sg.Button('Exit')]]




        genomics_window = sg.Window('Genomics',size=(1700,750), grab_anywhere=False).Layout(layout_Genomics)
        while True:
            event2,value2 = genomics_window.Read()
            if event2 is None or event2 == 'Exit':
                genomics_window_active = False
                genomics_window.Close()
                title_window.UnHide()
                break


    if not genomics_window_active and event1 == 'Cancer':
        title_window.Hide()
        cancer_window_active = True
        layout2 = [[sg.Text('Window 2')],
                    [sg.Button('Exit')]]
        cancer_window = sg.Window('Cancer').Layout(layout2)
        while True:
            event2,value2 = cancer_window.Read()
            if event2 is None or event2 == 'Exit':
                cancer_window_active = False
                cancer_window.Close()
                title_window.UnHide()
                break

    if not neurobiology_window_active and event1 == 'Neurobiology':
        title_window.Hide()
        neurobiology_window_active = True
        layout2 = [[sg.Text('Window 2')],
                   [sg.Image(r'C:\Users\User\PycharmProjects\GUI\T-cells\Th.png')],
                    [sg.Button('Exit')]]
        neurobiology_window = sg.Window('Cancer').Layout(layout2)
        while True:
            event2,value2 = neurobiology_window.Read()
            if event2 is None or event2 == 'Exit':
                neurobiology_window_active = False
                neurobiology_window.Close()
                title_window.UnHide()
                break

    if not cancerImmunology_window_active and event1 == 'Cancer Immunology':
        title_window.Hide()
        neurobiology_window_active = True
        layout2 = [[sg.Text('Window 2')],
                   [sg.Image(r'C:\Users\User\PycharmProjects\GUI\T-cells\Th.png')],
                    [sg.Button('Exit')]]
        cancerImmunology_window = sg.Window('Cancer Immunology').Layout(layout2)
        while True:
            event2,value2 = cancerImmunology_window.Read()
            if event2 is None or event2 == 'Exit':
                cancerImmunology_window_active_window_active = False
                cancerImmunology_window.Close()
                title_window.UnHide()
                break
